name: Release Pipeline

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests flask schedule aiohttp numpy

    - name: Extract version
      id: version
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Generate changelog
      id: changelog
      run: |
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        git log $(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "HEAD~10")..HEAD --pretty=format:"- %s (%an)" --no-merges | head -20 >> $GITHUB_OUTPUT || echo "- Initial release" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        release_name: 競艇予想システム ${{ steps.version.outputs.VERSION }}
        body: |
          ## 🚀 競艇予想システム ${{ steps.version.outputs.VERSION }}
          
          ### 📋 このリリースの変更点
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ### 🐳 Docker での実行
          ```bash
          docker run -p 5001:5001 ghcr.io/kaenozu/kyotei:${{ steps.version.outputs.VERSION }}
          ```
          
          ### 📦 手動インストール
          ```bash
          git clone https://github.com/kaenozu/kyotei.git
          cd kyotei
          git checkout ${{ steps.version.outputs.VERSION }}
          pip install requests flask schedule aiohttp numpy
          python scripts/web_app_modular.py
          ```
          
          ### 🌐 アクセス
          - URL: http://localhost:5001
          - 的中率レポート: http://localhost:5001/accuracy
          - システム状態: http://localhost:5001/status
          
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, '-') }}

  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/kaenozu/kyotei
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max